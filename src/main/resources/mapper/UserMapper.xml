<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.warehouse_manager.mapper.UserMapper">
    <!--
    根据账号查询用户信息的方法
    -->
    <select id ="findUserByCode" resultType="user" >
            select * from user_info where user_code = #{userCode} and is_delete = 0
    </select>
    <!--查询用户行数的方法-->
    <select id="findUserRowCount" resultType="Integer">
        select count(*) from user_info
            <where>
               <if test="userCode != null and userCode != ''">
                   and user_code like concat('%',#{userCode},'%')
               </if>
               <if test="userType !=null and userType!=''">
                   and user_type = #{userType}
               </if>
               <if test="userState !=null and userState!=''">
                   and user_state=#{userState}
               </if>
                and is_delete = 0;
            </where>
    </select>
    <!--分页查询用户的方法-->
    <select id="findUserByPage" resultType="user">
        select t1.*,t2.user_code getCode
        from user_info t1,user_info t2
        where t1.create_by = t2.user_id and t1.is_delete=0
        <if test="user.userCode != null and user.userCode != ''">
            and t1.user_code like concat('%',#{user.userCode},'%')
        </if>
        <if test="user.userType !=null and user.userType!=''">
            and t1.user_type = #{user.userType}
        </if>
        <if test="user.userState !=null and user.userState!=''">
            and t1.user_state=#{user.userState}
        </if>
        order by t1.create_time desc
      limit #{page.limitIndex},#{page.pageSize}
    </select>

    <!--根据用户Id修改用户状态-->
    <update id="setStateByUid">
        update user_info set user_state = #{param2} where user_id =#{param1}
    </update>

    <!--根据用户ids修改用户为删除状态的方法,传过来的id可能是一个数，可能是list集合，因此用一个foreach，合进一个业务里-->
    <update id="setIsDeleteByIds">
        update user_info set is_delete =1 where user_id in
        <foreach collection="list" open="(" close=")" separator="," item="userId">
            #{userId}
        </foreach>
    </update>

    <!--根据用户id修改用户昵称的方法-->
    <update id="setUserNameByUid">
        update user_info
        set
            user_name=#{userName},update_by =#{updateBy},update_time=now()
where user_id =#{userId}
    </update>

    <!--根据用户id修改密码的方法-->
    <update id="setPwdByUid">
        update user_info
        set
            user_pwd =#{param2}
        where user_id=#{param1}
    </update>
</mapper>

